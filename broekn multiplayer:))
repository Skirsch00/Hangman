import java.util.Scanner;
public class Multiplayer
{

    public static void runMultiplayer() {
        int swap = 0;
        int max = 0;
        int p1Score = 0;
        int p2Score = 0;

        Scanner scan = new Scanner(System.in);
        boolean multiplayer = false;
        String[] words =  { "monkey", "giraffe", "octopus", "computer", "hoodie", "trousers", "desktop", "copper", "Unite", "Decisive", "Notice", "Educated", 
         "explain", "branch", "talented", "punishment", "apparel", "dangerous", "Coherent", "Government", "Defeated", "Pumped", "History", "Troubled", 
        "Heartbreaking", "Knowing", "Interest", "Mountain", "Window", "Interest", "Inconclusive", "Balance", "Freezing", "Challenge", "Brutally", "Creative",
        "definitive", "negative", "molecular", "Blushing", "entertain", "Believing", "Adherence", "Official", "Victory", "Billionaire", "Correlation", "Popular",
        "Attitude", "Amplitude","Apple Pie", "Donald Trump", "Full-time", "In-class", "Off-campus", "Part-time", "Long-term", "Middle-aged", "Twelve-year-old", 
        "Father-in-law", "Forty-two", "Thirty-seven", "Ex-girlfriend", "Co-operate", "They're", "Couldn't", "Didn't", "You're", "We've", "Who's",
        "Grand Jury", "Ice Cream", "Real Estate", "Full Moon", "Attorney General", "Middle-class", "Post Office", "Living Room", "Full Moon", 
        "Dinner Table", "Coffee Mug", "Hot Dog", "Let's", "Don't", "Won't", "High School", "Elementary School", "Could've", "Would've Had", 
        "Chocolate Chip Cookies", "Well-respected", "Off-Campus", "State-of-art",  };

        java.util.Random x = new java.util.Random();
        int index = x.nextInt(words.length);
        String wordR = words[index];

        System.out.println("What would you like the score limit to be?");
        
        max = scan.nextInt();
        scan.nextLine();
        boolean vs = true;
        System.out.println("Player 1 enter your name!");
        String name1 = scan.nextLine();

        System.out.println("Player 2 enter your name!");
        String name2 = scan.nextLine();
        
        int MAX_GUESSES = 6;

        wipePage();
        while (vs)
        {
                    String[] incorLtrs = new String[MAX_GUESSES];
            if (swap == 1)
            {
                System.out.println(name2 + ": Please enter a word, enter 'random' if you want to use a random word.");
                //System.out.println("");
                //System.out.println(name1 + " you'll have to guess this word");
                swap = 0;

            }
            else
            {
                System.out.println(name1 + ": Please enter a word, enter 'random' if you want to use a random word.");
                //System.out.println("Please enter a word, enter 'random' if you want to use a random word.");
                //System.out.println(name2 + " you'll have to guess this word");
                swap = 1;
            }
            String word = scan.nextLine();
            if (word.equalsIgnoreCase("random"))
            {
                word = wordR;
            }
            String[] corLtrs = new String[word.length()];
            for (int i = 0; i < corLtrs.length; i++)
            {
                if (word.substring(i, i+1).equals("'"))
                    corLtrs[i] = "'";
                else if (word.substring(i, i+1).equals("-"))
                    corLtrs[i] = "-";
                else if (word.substring(i, i+1).equals(" "))
                    corLtrs[i] = " ";
                else if (word.substring(i, i+1).equals(","))
                    corLtrs[i] = ",";
                else if (word.substring(i, i+1).equals("!"))
                    corLtrs[i] = "!";
                else if (word.substring(i, i+1).equals("?"))
                    corLtrs[i] = "?";
                else if (word.substring(i, i+1).equals("."))
                    corLtrs[i] = ".";
                else
                    corLtrs[i] = "displayUnderscore";
            }

            wipePage();

            System.out.println(" ______");
            System.out.println(" |    }");
            System.out.println(" |");
            System.out.println(" |");
            System.out.println(" |");
            System.out.println("_|_");
            System.out.println();
            for (int i = 0; i < word.length(); i++)
            {
                if (corLtrs[i].equals("displayUnderscore"))
                    System.out.print("_ ");
                else if (corLtrs[i] == null)
                    System.out.print("  ");
                else if (corLtrs[i].equals("'"))
                    System.out.print("' ");
                else if (corLtrs[i].equals("-"))
                    System.out.print("- ");
                else if (corLtrs[i].equals(","))
                    System.out.print(", ");
                else if (word.substring(i, i+1).equals("!"))
                    System.out.print("! ");
                else if (word.substring(i, i+1).equals("?"))
                    System.out.print("? ");
                else if (word.substring(i, i+1).equals("."))
                    System.out.print(". ");
                else
                    System.out.print(corLtrs[i]+" ");
            }
            System.out.println();
            System.out.println();
            System.out.println();
            System.out.println();

            boolean invalidInput = false;

            System.out.println("Enter a guess.");
            String guess = scan.next();
            for (int i = 0; i < 5; i++) {
                if ((incorLtrs[i] != null) && (incorLtrs[i].equalsIgnoreCase(guess)))
                    invalidInput = true;
            }
            for (int i = 0; i < word.length(); i++) {
                if ((corLtrs[i] != null) && (corLtrs[i].equalsIgnoreCase(guess)))
                    invalidInput = true;
            }
            if (guess.length() != 1) {
                invalidInput = true;
            }
            while (invalidInput)
            {
                System.out.println("You can't use that! Try again.");
                guess = scan.next();
                invalidInput = false;

                for (int i = 0; i < 5; i++) {
                    if ((incorLtrs[i] != null) && (incorLtrs[i].equalsIgnoreCase(guess)))
                        invalidInput = true;
                }
                for (int i = 0; i < word.length(); i++) {
                    if ((corLtrs[i] != null) && (corLtrs[i].equalsIgnoreCase(guess)))
                        invalidInput = true;
                }
                if (guess.length() != 1)
                    invalidInput = true;
            }
            wipePage();

            boolean correct = false;
            boolean gameOver = false;
            //int a = 0;
            int b = 0;
            int wrongCounter = 0;
            int rightCounter = 0;
            int counter = 0;
            int f = 0;
            int l = word.length();
           // String[] gueses = new String[l + 6];
            String[] str = new String[word.length()];
            for (int i = 0; i < word.length(); i++)
            str[i] = word.substring(i, i+1);
            while (wrongCounter < 6 && rightCounter < l)
            {

                invalidInput = false;
                correct = false;
                int first = 0;
                for (int second = 1; second <= word.length(); second++)
                {

                    if (word.substring(first, second).equalsIgnoreCase(guess))
                    {
                        corLtrs[first] = guess;
                        correct = true;
                    }
                    first++;
                }

                if (!correct)
                {

                    for (int i = 0; i < 6; i++)
                    {
                        if (incorLtrs[i] == null)
                        {
                            incorLtrs[i] = guess;
                            break;
                        }
                    }
                }

                for (f = 0; f < l; f++)
                {

                    if (str[f].equalsIgnoreCase(guess))
                    {
                        rightCounter++;
                        counter++;

                        //gueses[f] = guess;
                    }
                }

                if (counter == 0)
                {

                    wrongCounter++;
                   //gueses[a] = guess;
                    //a++;
                }

                switch (wrongCounter)
                {
                    case 0: 
                    System.out.println(" ______");
                    System.out.println(" |    }");
                    System.out.println(" |");
                    System.out.println(" |");
                    System.out.println(" |");
                    System.out.println("_|_");
                    System.out.println();
                    break;
                    case 1: 
                    System.out.println(" ______");
                    System.out.println(" |    }");
                    System.out.println(" |    O");
                    System.out.println(" |");
                    System.out.println(" |");
                    System.out.println("_|_");
                    System.out.println();
                    break;
                    case 2: 
                    System.out.println(" ______");
                    System.out.println(" |    }");
                    System.out.println(" |    O");
                    System.out.println(" |    |");
                    System.out.println(" |");
                    System.out.println("_|_");
                    System.out.println();
                    break;
                    case 3: 
                    System.out.println(" ______");
                    System.out.println(" |    }");
                    System.out.println(" |    O");
                    System.out.println(" |   /|");
                    System.out.println(" |");
                    System.out.println("_|_");
                    System.out.println();
                    break;
                    case 4: 
                    System.out.println(" ______");
                    System.out.println(" |    }");
                    System.out.println(" |    O");
                    System.out.println(" |   /|\\");
                    System.out.println(" |");
                    System.out.println("_|_");
                    System.out.println();
                    break;
                    case 5: 
                    System.out.println(" ______");
                    System.out.println(" |    }");
                    System.out.println(" |    O");
                    System.out.println(" |   /|\\");
                    System.out.println(" |   /");
                    System.out.println("_|_");
                    System.out.println();
                    break;
                    case 6: 
                    System.out.println(" ______");
                    System.out.println(" |    }");
                    System.out.println(" |    O");
                    System.out.println(" |   /|\\");
                    System.out.println(" |   / \\");
                    System.out.println("_|_");
                    System.out.println();
                }
                for (int i = 0; i < word.length(); i++)
                {
                    if (corLtrs[i].equals("displayUnderscore"))
                        System.out.print("_ ");
                    else if (corLtrs[i] == null)
                        System.out.print("  ");
                    else if (corLtrs[i].equals("'"))
                        System.out.print("' ");
                    else if (corLtrs[i].equals("-"))
                        System.out.print("- ");
                    else if (corLtrs[i].equals(","))
                        System.out.print(", ");
                    else if (word.substring(i, i+1).equals("!"))
                        corLtrs[i] = "! ";
                    else if (word.substring(i, i+1).equals("?"))
                        corLtrs[i] = "? ";
                    else if (word.substring(i, i+1).equals("."))
                        corLtrs[i] = ". ";
                    else
                        System.out.print(corLtrs[i]+" ");
                }

                System.out.println();
                System.out.println();
                for (int i = 0; i < 6; i++)
                {
                    if (incorLtrs[i] != null)
                        System.out.print(incorLtrs[i] + " ");
                }
                counter = 0;
                if ((wrongCounter < 6) && (rightCounter < l))
                {
                    System.out.println();
                    System.out.println();
                    System.out.println("Enter another guess.");
                    guess = scan.next();

                    for (int i = 0; i < 5; i++) {
                        if ((incorLtrs[i] != null) && (incorLtrs[i].equalsIgnoreCase(guess)))
                            invalidInput = true;
                    }
                    for (int i = 0; i < word.length(); i++) {
                        if ((corLtrs[i] != null) && (corLtrs[i].equalsIgnoreCase(guess)))
                            invalidInput = true;
                    }
                    if (guess.length() != 1) {
                        invalidInput = true;
                    }
                    while (invalidInput)
                    {
                        System.out.println("You can't use that! Try again.");
                        guess = scan.next();
                        invalidInput = false;

                        for (int i = 0; i < 5; i++) {
                            if ((incorLtrs[i] != null) && (incorLtrs[i].equalsIgnoreCase(guess)))
                                invalidInput = true;
                        }
                        for (int i = 0; i < word.length(); i++) {
                            if ((corLtrs[i] != null) && (corLtrs[i].equalsIgnoreCase(guess)))
                                invalidInput = true;
                        }
                        if (guess.length() != 1)
                            invalidInput = true;
                    }
                    wipePage();
                }
            }
            System.out.println();
            System.out.println();

            if (rightCounter == l)
            {
                if (swap == 1)
                {
                    System.out.println(name2 + " wins!");
                    p2Score++;
                }
                else    
                {
                    System.out.println(name1 + " wins!");
                    p1Score++;
                }
            }
            else
            {
                if (swap == 1)
                p1Score++;
                else
                p2Score++;
            }
            System.out.println("Score:");
            System.out.println(name1 + ": "+ p1Score);
            System.out.println(name2 + ": "+ p2Score);
            scan.nextLine();
            System.out.println("Type any key to continue!");
            scan.nextLine();
            wipePage();
            if (p2Score == max || p1Score == max)
                vs = false;
        }
    }

    public static void wipePage()
    {
        //for (int i = 0; i < 60; i++) {
        System.out.print("\f");
        //}
    }
}
